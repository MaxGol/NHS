service: nhs-chat-bots

provider:
  region: eu-west-1
  name: aws
  runtime: nodejs10.x
  memorySize: 1536
  role: arn:aws:iam::393767856149:role/lambda_full
  timeout: 7
  stage: ${opt:stage, 'development'}
  profile: dolphin-haley-prod
  environment:
    STAGE: ${self:provider.stage}
    SERVICE: ${self:service}
    ACCESS_TOKEN_SECRET: ${file(./env.yml):${self:provider.stage}.ACCESS_TOKEN_SECRET}
    BOT_ACCESS_TOKEN: ${file(./env.yml):${self:provider.stage}.BOT_ACCESS_TOKEN}
    NODE_ENV: ${file(./env.yml):${self:provider.stage}.NODE_ENV}
    SIGNATURE_TOKEN: ${file(./env.yml):${self:provider.stage}.SIGNATURE_TOKEN}

functions:
  bot: 
    handler: src/server/index.bot
    timeout: 10
    memorySize: 2048
    events:
      - http:
          cors: true
          method: post
          path: bot/webhook/amio

  graphql:
    handler: src/server/index.handler
    events:
      - http:
          path: graphql
          method: post
          cors:
            origin: '*'
            allowCredentials: true
      - http:
          path: graphql
          method: get
          cors:
            origin: '*'
            allowCredentials: true

resources:
  Resources:
    audioContent:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-audio-content
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: user
            AttributeType: S
          - AttributeName: approved
            AttributeType: S
          - AttributeName: created
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: SavedByUserIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
              - AttributeName: created
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: ApprovedIndex
            KeySchema:
              - AttributeName: approved
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: CreatedIndex
            KeySchema:
              - AttributeName: created
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    users: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-users
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: phone
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserPhoneIndex
            KeySchema:
              - AttributeName: phone
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  
    admin:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-admin
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    session:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-session
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true


plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-s3-sync
  - serverless-plugin-additional-stacks
  - serverless-prune-plugin
  - serverless-dynamodb-local


custom:
  additionalStacks:
    s3:
      deploy: Before
      Resources:
        moderationSiteBucket:
          Type: AWS::S3::Bucket
          Properties:
            BucketName: ${self:service}-${self:provider.stage}-moderation-site-bucket
            AccessControl: PublicRead
            WebsiteConfiguration:
              IndexDocument: index.html
              ErrorDocument: index.html

        moderationSiteBucketPolicy:
          Type: AWS::S3::BucketPolicy
          DependsOn:
            - moderationSiteBucket
          Properties:
            Bucket:
              Ref: moderationSiteBucket
            PolicyDocument:
              Statement:
                - Sid: PublicReadGetObject
                  Effect: Allow
                  Principal: "*"
                  Action:
                  - s3:GetObject
                  Resource: arn:aws:s3:::${self:service}-${self:provider.stage}-moderation-site-bucket/*

  s3Sync:
    - bucketName: ${self:service}-${self:provider.stage}-moderation-site-bucket
      localDir: ./build/client/cms

  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

    webpackConfig: ./webpack/server.js

  prune:
    automatic: true
    number: 10

  serverless-offline:
    port: 5003

  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8001
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:service}-${self:provider.stage}-audio-content
            sources: [./seed/db/content-table.json]